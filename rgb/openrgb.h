#ifndef OPENRGB_H
#define OPENRGB_H

#include <pthread.h>
#include <stdint.h>

// Packet ID
#define OPENRGB_NET_PACKET_ID_REQUEST_CONTROLLER_COUNT 0
#define OPENRGB_NET_PACKET_ID_REQUEST_CONTROLLER_DATA 1
#define OPENRGB_NET_PACKET_ID_REQUEST_PROTOCOL_VERSION 40
#define OPENRGB_NET_PACKET_ID_SET_CLIENT_NAME 50
#define OPENRGB_NET_PACKET_ID_DEVICE_LIST_UPDATED 100
#define OPENRGB_NET_PACKET_ID_REQUEST_PROFILE_LIST 150
#define OPENRGB_NET_PACKET_ID_REQUEST_SAVE_PROFILE 151
#define OPENRGB_NET_PACKET_ID_REQUEST_LOAD_PROFILE 152
#define OPENRGB_NET_PACKET_ID_REQUEST_DELETE_PROFILE 153
#define OPENRGB_NET_PACKET_ID_RGBCONTROLLER_RESIZEZONE 1000
#define OPENRGB_NET_PACKET_ID_RGBCONTROLLER_UPDATELEDS 1050
#define OPENRGB_NET_PACKET_ID_RGBCONTROLLER_UPDATEZONELEDS 1051
#define OPENRGB_NET_PACKET_ID_RGBCONTROLLER_UPDATESINGLELED 1052
#define OPENRGB_NET_PACKET_ID_RGBCONTROLLER_SETCUSTOMMODE 1100
#define OPENRGB_NET_PACKET_ID_RGBCONTROLLER_UPDATEMODE 1101
#define OPENRGB_NET_PACKET_ID_RGBCONTROLLER_SAVEMODE 1102

#define OPENRGB_SUPPORTED_VERSION 4

extern int openrgb_socket;
extern uint32_t openrgb_using_version;
extern pthread_t recv_thread_id;
extern uint8_t suspend_server;

uint8_t *generate_packet(uint32_t pkt_dev_idx, uint32_t pkt_id, uint32_t pkg_size, const uint8_t *data);
void openrgb_connect();
uint32_t request_controller_count();
void *recv_thread(void *arg);

#endif